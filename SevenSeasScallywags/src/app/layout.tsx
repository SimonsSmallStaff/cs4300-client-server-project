import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet"/>
      </head>
    <body
        style={{ backgroundImage: "url('/images/background.jpg')" }}>
        <nav style={{ backgroundColor: '#3c2222' }} className="w-full flex items-center justify-between px-6 py-4 bg-white shadow-md pirata">
          <div>
            <a href="/">
              <p className="text-4xl text-white">Scallywags Stash</p>
            </a>
          </div>
          <div className="flex items-center gap-4">
          {global.isLoggedIn && (
              <a href="/plunder" className="text-white text-2xl">
                <p>Stash</p>
              </a>
            )}
            {global.isLoggedIn && (
              <a href="/profile" className="text-gray-600 hover:text-gray-800 text-2xl">
                <i className="fas fa-user-circle text-white"></i>
              </a>
            )}
            {global.isLoggedIn && (
              <div className="bg-black p-2 rounded-lg">
              <a href="/logout">
                <button>
                  {"Logout"}
                </button>
              </a>
            </div>
            )}
            {!global.isLoggedIn && (
              <div className="bg-black p-2 rounded-lg">
              <a href="/login">
                <button>
                  {"Login"}
                </button>
              </a>
            </div>
            )}
          </div>
        </nav>
        {children}
      </body>
    </html>
  );
}
